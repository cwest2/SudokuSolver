Need to restructure things for more generality: Rather than a "Class -> Variant" approach, we can do something
  like a "Class -> Regions/Regions -> Variant" approach.  Each class produces a different kind of region (i.e. a row,
  a portion of a row, a cage, an arrow/thermo, etc), and regions have variants that they apply to their contents
  - This approach allows for things like sandwich cages without having to reinvent the wheel, makes functionality
    much more transferrable
  - First up, figure out what types of region need to be made (thinking sequence and cage, first off), then figure
    out which variants correspond to which regions.  Finally, start reconfiguring code into new structure