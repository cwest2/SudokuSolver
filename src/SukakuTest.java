import org.junit.jupiter.api.Test;

public class SukakuTest extends SudokuTest {

    @Test
    public void testFullGridSukaku() {
        int[][][] options = {
                {
                        {2, 3, 5, 6, 7, 8, 9},
                        {1, 2, 4, 5, 6, 7, 8},
                        {1, 2, 5, 7},
                        {1, 3, 4, 5, 8},
                        {1, 3, 6, 7, 8, 9},
                        {1, 2, 3, 6, 8, 9},
                        {4, 5, 6, 7, 9},
                        {1, 4, 5, 6, 7, 8, 9},
                        {3, 5, 6, 7, 8}},
                {
                        {1, 3, 6, 7, 8, 9},
                        {8, 9},
                        {1, 2, 4, 5, 6},
                        {1, 3, 5, 7, 9},
                        {1, 2, 3, 4, 5, 6, 9},
                        {4, 5, 6},
                        {3, 5, 8, 9},
                        {5, 9},
                        {1, 2, 3, 6, 7, 8, 9}},
                {
                        {1, 4, 6, 7, 8},
                        {2, 4, 6},
                        {1, 2, 3, 6},
                        {1, 2, 3, 5, 6, 8, 9},
                        {1, 2, 4, 6, 9},
                        {1, 3, 4, 8},
                        {2, 4, 6, 7, 8, 9},
                        {3, 5, 6, 8, 9},
                        {3, 4, 7}
                },
                {
                        {1, 2, 3, 4, 5, 6, 7, 9},
                        {1, 2, 5, 6, 8},
                        {2, 3, 4, 5, 7, 8, 9},
                        {3, 4, 6, 7, 8, 9},
                        {1, 4, 6, 7, 8},
                        {2, 4, 5, 8, 9},
                        {1, 2, 8, 9},
                        {2, 3, 5, 8, 9},
                        {1, 3, 4, 5, 6, 8}
                },
                {
                        {2, 3, 5, 6, 8},
                        {1, 2, 5, 6, 7, 8, 9},
                        {1, 2, 5, 7},
                        {2, 3, 6},
                        {2, 5, 8},
                        {1, 2, 3, 4, 8, 9},
                        {1, 3, 5, 6, 9},
                        {4, 6, 7, 8, 9},
                        {1, 4, 9}
                },
                {
                        {1, 3, 4, 9},
                        {1, 2, 4, 6, 8, 9},
                        {1, 3, 5, 6, 8, 9},
                        {1, 3, 4, 6, 9},
                        {1, 2, 3, 7, 9},
                        {1, 5, 6, 7, 8},
                        {1, 2, 3, 6, 7, 8},
                        {1, 2, 3, 6, 8, 9},
                        {1, 2, 3, 4, 5, 6, 8}
                },
                {
                        {2, 3, 4, 6, 7, 9},
                        {1, 2, 3, 5, 8},
                        {1, 2, 3, 5, 7, 8},
                        {4, 6, 7, 8},
                        {1, 2, 3, 4, 5, 6, 8, 9},
                        {2, 5, 6, 9},
                        {1, 2, 3, 5, 7, 8},
                        {1, 3, 4, 5, 8},
                        {3, 4, 6, 7, 8}
                },
                {
                        {2, 3, 4, 6, 7, 8, 9},
                        {1, 3, 4, 7, 8, 9},
                        {1, 5},
                        {1, 2, 3, 4, 5, 6, 7, 8, 9},
                        {1, 3, 4, 5, 6, 7},
                        {2, 3, 4, 6, 7, 8, 9},
                        {3, 7},
                        {1, 2, 3, 5, 6, 7, 9},
                        {1, 2, 3, 5, 8, 9}
                },
                {
                        {2, 3, 8, 9},
                        {2, 3, 4, 6, 8, 9},
                        {1, 3, 5, 7, 8, 9},
                        {2, 3, 4, 7, 8},
                        {1, 3, 5, 6, 9},
                        {1, 2, 3, 4, 6, 7, 9},
                        {1, 3, 4, 5, 6, 9},
                        {2, 4, 5, 6, 7, 8, 9},
                        {2, 3, 4, 5, 7, 8}
                }
        };

        AbstractPuzzle puzzle = new RegularSudoku.RegularSudokuBuilder()
                .build();
        puzzle = new SukakuSudoku.SukakuSudokuBuilder(puzzle)
                .withOptionsGrid(options)
                .build();

        int[][] solution = {
                {5, 7, 2, 1, 9, 3, 4, 8, 6},
                {9, 8, 4, 7, 2, 6, 3, 5, 1},
                {1, 6, 3, 5, 4, 8, 2, 9, 7},
                {7, 1, 8, 3, 6, 4, 9, 2, 5},
                {3, 9, 5, 2, 8, 1, 6, 7, 4},
                {4, 2, 6, 9, 7, 5, 8, 1, 3},
                {2, 5, 7, 6, 3, 9, 1, 4, 8},
                {6, 4, 1, 8, 5, 2, 7, 3, 9},
                {8, 3, 9, 4, 1, 7, 5, 6, 2}
        };

        compareSolutions(puzzle.solve(), solution);
    }

    @Test
    public void testPartialSukakuWithVariableSumSandwich() {
        int[][][] options = {
                {{}, {}, {}, {}, {}, {}, {}, {}, {}},
                {{}, {}, {}, {}, {1, 3}, {}, {}, {}, {}},
                {{}, {}, {}, {}, {}, {0, 2}, {}, {}, {}},
                {{}, {}, {}, {}, {}, {}, {-1, 1}, {}, {}},
                {{}, {1, 3}, {}, {}, {}, {}, {}, {3, 5}, {}},
                {{}, {}, {-1, 1}, {}, {}, {}, {}, {}, {}},
                {{}, {}, {}, {0, 2}, {}, {}, {}, {}, {}},
                {{}, {}, {}, {}, {7, 9}, {}, {}, {}, {}},
                {{}, {}, {}, {}, {}, {}, {}, {}, {}}
        };

        int[][] rowSumSets = {
                {},
                {},
                {20, 22},
                {3, 5},
                {19, 21},
                {17, 19},
                {},
                {9, 11},
                {10, 12}
        };

        int[][] colSumSets = {
                {16, 18},
                {},
                {19, 21},
                {17, 19},
                {},
                {19, 21},
                {17, 19},
                {},
                {}
        };

        AbstractPuzzle puzzle = new RegularSudoku.RegularSudokuBuilder()
                .build();
        puzzle = new SandwichSudoku.SandwichSudokuBuilder(puzzle)
                .withRowSumSets(rowSumSets)
                .withColSumSets(colSumSets)
                .build();
        puzzle = new SukakuSudoku.SukakuSudokuBuilder(puzzle)
                .withOptionsGrid(options)
                .build();

        int[][] solution = {
                {1, 2, 9, 8, 3, 6, 5, 4, 7},
                {4, 6, 8, 7, 1, 5, 3, 2, 9},
                {5, 7, 3, 9, 4, 2, 8, 6, 1},
                {7, 4, 6, 5, 9, 3, 1, 8, 2},
                {9, 3, 2, 6, 8, 1, 7, 5, 4},
                {8, 5, 1, 4, 2, 7, 6, 9, 3},
                {3, 9, 7, 2, 6, 8, 4, 1, 5},
                {2, 8, 5, 1, 7, 4, 9, 3, 6},
                {6, 1, 4, 3, 5, 9, 2, 7, 8}
        };

        compareSolutions(puzzle.solve(), solution);
    }
}
